// <auto-generated />
using FilmaiDB.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FilmaiDB.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190811213109_PasalintaStringAktoriai")]
    partial class PasalintaStringAktoriai
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FilmaiDB.Models.AktoriaiFilmas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AktoriusId");

                    b.Property<int>("FilmasId");

                    b.HasKey("Id");

                    b.HasIndex("AktoriusId");

                    b.HasIndex("FilmasId");

                    b.ToTable("AktoriaiFilmai");
                });

            modelBuilder.Entity("FilmaiDB.Models.Aktorius", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VardasPavarde")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Aktoriai");
                });

            modelBuilder.Entity("FilmaiDB.Models.Filmas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IsleidimoData");

                    b.Property<string>("Pavadinimas")
                        .IsRequired();

                    b.Property<int>("ZanraiId");

                    b.HasKey("Id");

                    b.HasIndex("ZanraiId");

                    b.ToTable("Filmai");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsleidimoData = 2011,
                            Pavadinimas = "Filmas1",
                            ZanraiId = 0
                        },
                        new
                        {
                            Id = 2,
                            IsleidimoData = 2012,
                            Pavadinimas = "Filmas2",
                            ZanraiId = 0
                        });
                });

            modelBuilder.Entity("FilmaiDB.Models.Zanrai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Pavadinimas")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Zanrai");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Pavadinimas = "Drama"
                        },
                        new
                        {
                            Id = 2,
                            Pavadinimas = "Komedija"
                        },
                        new
                        {
                            Id = 3,
                            Pavadinimas = "Veiksmo"
                        });
                });

            modelBuilder.Entity("FilmaiDB.Models.AktoriaiFilmas", b =>
                {
                    b.HasOne("FilmaiDB.Models.Aktorius", "Aktorius")
                        .WithMany("AktoriaiFilmai")
                        .HasForeignKey("AktoriusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FilmaiDB.Models.Filmas", "Filmas")
                        .WithMany("AktoriaiFilmai")
                        .HasForeignKey("FilmasId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FilmaiDB.Models.Filmas", b =>
                {
                    b.HasOne("FilmaiDB.Models.Zanrai", "Zanrai")
                        .WithMany()
                        .HasForeignKey("ZanraiId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
